---
- name: install docker
  hosts: localhost
  become: yes

  tasks:
    - name: update the apt package index
      apt:
        update_cache: yes

    - name: install packages to allow apt to use a repository over HTTPS
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
        state: present

    - name: add docker's official gpg key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: add docker repository
      apt_repository:
        repo: deb [arch=arm64] https://download.docker.com/linux/ubuntu noble stable
        state: present

    - name: update the apt package index again
      apt:
        update_cache: yes

    - name: install the latest version of Docker
      apt:
        name: docker-ce
        state: latest
        
    - name: ensure docker service is running
      systemd:
        name: docker
        state: started
        enabled: yes
        
- name: deploy docker_chrony container
  hosts: all
  become: true  # Set to true if sudo privileges are required
  vars:
    docker_image: "ghcr.io/ftflstwd/docker_chrony@sha256:f8eaefa66825473f30783ea518ff702e84eb3a8f919282375095e35ad27f852e"
    container_name: "chrony"

- name: Pull the specified Docker image
  ansible.builtin.docker_image:
    name: "{{ docker_image }}"
    source: pull
    state: present
  register: pull_result
  retries: 3
  delay: 5
  until: pull_result is success

- name: Ensure any existing container with the same name is stopped and removed
  ansible.builtin.docker_container:
    name: "{{ container_name }}"
    state: absent
    ignore_errors: true

- name: Deploy the Docker container
  ansible.builtin.docker_container:
    name: "{{ container_name }}"
    image: "{{ docker_image }}"
    state: started
    restart_policy: unless-stopped
    network_mode: host
    register: container_result

- name: Verify the container is running
  ansible.builtin.debug:
    msg: "Container {{ container_name }} is running with ID {{ container_result.ansible_facts.docker_container.Id }}"
    when: container_result.ansible_facts.docker_container.State.Running
